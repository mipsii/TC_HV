<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="Solenoid" Id="{a1565ff4-83c0-4d25-afd3-9bce02147dc7}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK Solenoid
VAR_INPUT
	desiredPosition	:	REAL;
	bPosDir			:	BOOL;
END_VAR
VAR
	curPosition		:	REAL;
	rampTime		:	StrRampTime;
	loc_rampTime	:	TIME;
	delta			:	REAL;
END_VAR
VAR_OUTPUT
	OutDir : REAL;	// Výstup v daném směru 
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[RampTimeMethod(desiredPosition, curPosition);
curPosition := desiredPosition;
IF (curPosition * desiredPosition >= 0) THEN
			// na istom solenoidu
			IF (ABS(desiredPosition) > ABS(curPosition)) THEN
			    // ACC
				IF (curPosition > 0) THEN
					loc_rampTime := rampTime.rampTimePosMinMax;
					ELSE
						loc_rampTime := rampTime.rampTimeNegMinMax;
						END_IF;
				// DEC
				ELSIF (curPosition > 0) THEN					
					loc_rampTime := rampTime.rampTimePosMaxMin;
					ELSE
						loc_rampTime := rampTime.rampTimeNegMaxMin;
						END_IF;
				curPosition := acc_dec_Valve(requiredValue := desiredPosition, currentValue := curPosition, rampTime := loc_rampTime);
			ELSE  
				//postoji prelaz
				blockMessage('Postoji prelaz');
				IF (curPosition >= 0) THEN
					curPosition := acc_dec_Valve(requiredValue := 0, currentValue := curPosition, rampTime := RampTime.rampTimePosMinMax);
					ELSE
						curPosition := acc_dec_Valve(requiredValue := 0, currentValue := curPosition, rampTime := RampTime.rampTimeNegMaxMin);
						END_IF;
					
			END_IF;

OutDir := curPosition; 
	]]></ST>
    </Implementation>
    <Method Name="RampTimeMethod" Id="{a5883b75-edac-4fd8-a266-fde78bff1172}">
      <Declaration><![CDATA[METHOD PRIVATE RampTimeMethod
VAR
	razlika	:	REAL;
END_VAR
VAR_INPUT
	desiredPosition	:	REAL;
	curPosition		:	REAL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// calculate time od rams
razlika := convertToAm((desiredPosition - curPosition), bPosDir);
rampTime.rampTimeNegMaxMin := REAL_TO_TIME(razlika / (generalVariable.conParammetr.CurNegDirMax/generalVariable.conParammetr.RampNegDirUp));
rampTime.rampTimeNegMinMax := REAL_TO_TIME(razlika / (generalVariable.conParammetr.CurNegDirMin/generalVariable.conParammetr.RampNegDirDown));
rampTime.rampTimePosMaxMin := REAL_TO_TIME(razlika / (generalVariable.conParammetr.CurPosDirMax/generalVariable.conParammetr.RampPosDirUp));
rampTime.rampTimePosMinMax := REAL_TO_TIME(razlika / (generalVariable.conParammetr.CurPosDirMin/generalVariable.conParammetr.RampPosDirDown));
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>