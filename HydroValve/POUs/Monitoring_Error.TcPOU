<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="Monitoring_Error" Id="{ddbe3727-6a6b-4e90-b0ef-5962f195c134}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK Monitoring_Error
VAR_INPUT
	negDirB	:	BOOL;
	posDirB	:	BOOL;
	command	:	REAL;
END_VAR
VAR_OUTPUT
	currentError	:	BOOL;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[// list errors on inout 
enableSolenoidControl(enaNegDir := negDirB, enaPosDir := posDirB, error := currentError);
commandCheck(comm := command, error := currentError);
]]></ST>
    </Implementation>
    <Method Name="commandCheck" Id="{e37482b3-3f45-49ac-9845-c74e88b1bb1e}">
      <Declaration><![CDATA[METHOD PRIVATE commandCheck
VAR_INPUT
	comm : REAL;
END_VAR
VAR_IN_OUT
	error: BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[// control command and enaeble direction
IF ((comm <= 1000) AND (comm >0)) THEN
		IF posDirB THEN
			error := FALSE;
			generalVariable.staus.bError[2].showError := FALSE;
			ELSE
				error := TRUE;
				showError(2,'příkaz a směr se neshodují');
				END_IF;
	ELSIF ((comm >= -1000) AND (comm < 0)) THEN
			IF negDirB THEN
				error := FALSE;
				generalVariable.staus.bError[2].showError := FALSE;
			ELSE
				error := TRUE;
				showError(2,'příkaz a směr se neshodují');
				END_IF;
			ELSIF comm = 0 THEN
				generalVariable.staus.Standstill := TRUE;
				IF NOT(negDirB AND posDirB) THEN
					error := FALSE;
					generalVariable.staus.bError[3].showError := FALSE;
				ELSE
					error := TRUE;
					showError(3,'zahrnoval některé směry');       
				END_IF;
			END_IF;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="enableSolenoidControl" Id="{612b163a-2352-495f-9f4e-55f73d756558}">
      <Declaration><![CDATA[METHOD PRIVATE enableSolenoidControl
VAR_INPUT
	enaPosDir : BOOL;
	enaNegDir : BOOL;	
END_VAR
VAR_IN_OUT
	error: BOOL;
END_VAR
VAR
	strr	:	STRING;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[//	control enaeble direction
IF (enaNegDir AND enaPosDir) THEN
	// error 
	currentError := TRUE;
	showError(1,'muze být aktivní pouze jedna cívka (PosDir nebo NegDir)');
	//errCode(1);
	ELSE
		currentError := FALSE ;
		generalVariable.staus.bError[1].showError := FALSE;
		END_IF
]]></ST>
      </Implementation>
    </Method>
    <Method Name="showError" Id="{3873f583-cd35-46ae-a32e-68d649424b0b}">
      <Declaration><![CDATA[METHOD PRIVATE showError
VAR_INPUT
	id	:	INT;
	str	:	STRING;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[//	show errora
generalVariable.staus.bError[50].showError := FALSE;
IF NOT(generalVariable.staus.bError[id].showError) THEN
	generalVariable.staus.nErrorId[id] := id;
	generalVariable.staus.bError[id].errorName := str;
	generalVariable.staus.bError[id].showError := TRUE;
	blockMessage(str);
	END_IF;]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>