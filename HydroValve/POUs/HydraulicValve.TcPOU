<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="HydraulicValve" Id="{52b97062-b094-41f2-9637-f563a04dcc55}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK HydraulicValve
VAR_INPUT
	bvPosDir	: BOOL;
	bvNegDir	: BOOL;
	command		: REAL;
END_VAR
VAR
	rampTimeACC	: REAL;
	rampTimeDEC	: REAL;
	curentSolenoid	:	SINT;	// neg -1, pos 1, nobady 0
	posDir	:	Solenoid();
	negDir	:	Solenoid(); 
END_VAR
VAR_OUTPUT
	OutPosDir : REAL := 0 ;	// Výstup v daném směru [mA]
	OutNegDir : REAL := 0 ;	// Výstup v daném směru [mA]
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[//	function block hydraulic valve
curentSolenoid := howIsActive();
//	based on the current position, which solenoid is selected
CASE curentSolenoid OF
	1	:	posDir( desiredPosition := command, bPosDir := bvPosDir);
	-1	:	negDir(desiredPosition := command, bPosDir := bvPosDir);
	0	:	daethTime(dTime := generalVariable.conParammetr.Deadtime);	
			// since it is at 0, the solenoid is selected, based on the desired value
			IF bvPosDir THEN
				posDir( desiredPosition := command, bPosDir := bvPosDir);
				ELSIF bvNegDir THEN
					negDir(desiredPosition := command, bPosDir := bvPosDir);
					END_IF;
END_CASE
//generalVariable.staus.OutPosDirProc := posDir.OutDir;
OutPosDir := posDir.OutDir;
OutNegDir := negDir.OutDir;

]]></ST>
    </Implementation>
    <Method Name="daethTime" Id="{02a42544-f112-4c58-96d0-f65887b40d4b}">
      <Declaration><![CDATA[METHOD PRIVATE daethTime 
VAR_INPUT
	dTime	:	TIME;
END_VAR
VAR
	
	wait_death_time	:	TON;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[// death time, waits 
dTime := generalVariable.conParammetr.Deadtime;
acc_dec(FALSE, FALSE);
generalVariable.staus.Standstill := TRUE;
wait_death_time(IN:=TRUE , PT:=dTime , Q=> , ET=> );]]></ST>
      </Implementation>
    </Method>
    <Method Name="howIsActive" Id="{e3d729e3-05dd-414f-8828-4f1662c60e24}">
      <Declaration><![CDATA[METHOD howIsActive : SINT
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[//	which solenoid it is currently on
IF (posDir.OutDir > 0) THEN
	howIsActive := 1;
	generalVariable.staus.OutPosDirProc := posDir.OutDir/10;
	generalVariable.staus.OutNegDirProc := 0;
	ELSIF (negDir.OutDir < 0) THEN
		howIsActive := -1;
		generalVariable.staus.OutPosDirProc := 0;
		generalVariable.staus.OutNegDirProc := negDir.OutDir/10;
		ELSE
			howIsActive := 0;
			END_IF;

]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>